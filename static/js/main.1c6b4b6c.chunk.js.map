{"version":3,"sources":["components/Intro.js","components/Home.js","layouts/Footer.js","components/Bars.js","components/Buttons.js","components/About.js","layouts/Header.js","App.js","serviceWorker.js","index.js"],"names":["Intro","ReactRotatingText","require","className","style","fontSize","fontWeight","items","color","pause","Home","position","backgroundColor","id","params","particles","number","value","density","enable","value_area","shape","type","stroke","width","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","Footer","Container","fluid","Row","right","cascade","Col","sm","role","aria-label","Bars","text","percent","bottom","left","Progress","Buttons","title","Button","outline","borderRadius","About","lg","top","md","href","target","Header","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","textDecoration","fontFamily","letterSpacing","htmlFor","onClick","Collapse","navbar","Nav","NavItem","NavLink","App","state","loading","fakeRequest","Promise","resolve","setTimeout","this","then","el","document","querySelector","setState","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1c6b4b6c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Intro = () => {\r\n  var ReactRotatingText = require(\"react-rotating-text\");\r\n  return (\r\n    <div className=\"text-center header text-dark\" style={{ fontSize: \"1.4em\" }}>\r\n      Hey!{\" \"}\r\n      <p style={{ fontWeight: \"500\" }} className=\"mb-0\">\r\n        I'm Shubh Khanna\r\n      </p>\r\n      <p className=\"p1\" style={{ fontWeight: \"500\" }}>\r\n        I'm into&nbsp;\r\n        <ReactRotatingText\r\n          items={[\"Web Development.\", \"Open Source.\"]}\r\n          color={\"#FF3E4D\"}\r\n          pause={1800}\r\n        />\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import React from \"react\";\r\nimport \"./CSS/Home.css\";\r\nimport Particles from \"react-particles-js\";\r\nimport Intro from \"./Intro\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        backgroundColor: \"#ecf0f3\",\r\n      }}\r\n      id=\"home\"\r\n    >\r\n      <div>\r\n        <Particles\r\n          className=\"home\"\r\n          params={{\r\n            particles: {\r\n              number: {\r\n                value: 70,\r\n                density: {\r\n                  enable: true,\r\n                  value_area: 1000,\r\n                },\r\n              },\r\n              color: {\r\n                value: [\"#BB2CD9\", \"#53E0BC\", \"#FF3E4D\", \"#25CCF7\"],\r\n              },\r\n              shape: {\r\n                type: [\"circle\", \"triangle\"],\r\n                stroke: {\r\n                  width: 0,\r\n                  color: \"#fff\",\r\n                },\r\n                polygon: {\r\n                  nb_sides: 5,\r\n                },\r\n              },\r\n              opacity: {\r\n                value: 1,\r\n                random: false,\r\n                anim: {\r\n                  enable: false,\r\n                  speed: 1,\r\n                  opacity_min: 0.1,\r\n                  sync: false,\r\n                },\r\n              },\r\n              size: {\r\n                value: 7,\r\n                random: true,\r\n                anim: {\r\n                  enable: false,\r\n                  speed: 4,\r\n                  size_min: 4,\r\n                  sync: false,\r\n                },\r\n              },\r\n              line_linked: {\r\n                enable: true,\r\n                distance: 150,\r\n                color: \"#000\",\r\n                opacity: 0.1,\r\n                width: 1,\r\n              },\r\n              move: {\r\n                enable: true,\r\n                speed: 6,\r\n                direction: \"none\",\r\n                random: false,\r\n                straight: false,\r\n                out_mode: \"out\",\r\n                bounce: false,\r\n                attract: {\r\n                  enable: false,\r\n                  rotateX: 300,\r\n                  rotateY: 600,\r\n                },\r\n              },\r\n            },\r\n            interactivity: {\r\n              detect_on: \"canvas\",\r\n              events: {\r\n                onhover: {\r\n                  enable: false,\r\n                  mode: \"grab\",\r\n                },\r\n                onclick: {\r\n                  enable: true,\r\n                  mode: \"push\",\r\n                },\r\n                resize: true,\r\n              },\r\n              modes: {\r\n                grab: {\r\n                  distance: 140,\r\n                  line_linked: {\r\n                    opacity: 1,\r\n                  },\r\n                },\r\n                bubble: {\r\n                  distance: 400,\r\n                  size: 40,\r\n                  duration: 2,\r\n                  opacity: 8,\r\n                  speed: 3,\r\n                },\r\n                repulse: {\r\n                  distance: 200,\r\n                  duration: 0.4,\r\n                },\r\n                push: {\r\n                  particles_nb: 4,\r\n                },\r\n                remove: {\r\n                  particles_nb: 2,\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      <Intro />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      <Container\r\n        fluid={true}\r\n        style={{\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        <Row className=\"justify-content-center\">\r\n          <Zoom right cascade>\r\n            <Col className=\"text-center\" sm=\"12\">\r\n              Made with{\" \"}\r\n              <span role=\"img\" aria-label=\"heart\">\r\n                &#128150;\r\n              </span>{\" \"}\r\n              by Shubh Khanna\r\n            </Col>\r\n          </Zoom>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Progress } from \"reactstrap\";\r\nimport { Slide, Zoom } from \"react-reveal\";\r\n\r\nconst Bars = ({ value, text, percent }) => {\r\n  return (\r\n    <div>\r\n      <Zoom bottom cascade>\r\n        <h6 style={{ color: \"#191919\" }}>\r\n          {text}\r\n          <span className=\"float-right\">{percent}</span>\r\n        </h6>\r\n      </Zoom>\r\n      <Slide left cascade>\r\n        <Progress color=\"dark\" value={value} className=\"mb-4\"></Progress>\r\n      </Slide>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bars;\r\n","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst Buttons = ({ color, title }) => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Button outline color={color} style={{ borderRadius: \" 20px\" }}>\r\n        {title}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport \"./CSS/Skills.css\";\r\nimport Bars from \"./Bars\";\r\nimport Buttons from \"./Buttons\";\r\nimport { Zoom, Fade } from \"react-reveal\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div id=\"about\">\r\n      <Container lg={12} fluid={true} className=\"py-4\">\r\n        <Row className=\"pt-3 pb-3\">\r\n          <Col>\r\n            <Zoom top cascade>\r\n              <h2 className=\"head\">About Me</h2>\r\n            </Zoom>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md={5}>\r\n            <p className=\"text-center pb-4\">\r\n              <Zoom left cascade>\r\n                I am an Computer Science sophomore at DIT University. A Web\r\n                developer and an Open-Source Contributor and an Data Science\r\n                enthusiast.\r\n              </Zoom>\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center px-2\">\r\n          <Col md={5}>\r\n            <Bars text=\"Python\" percent=\"75%\" value=\"75\" />\r\n            <Bars text=\"JavaScript\" percent=\"70%\" value=\"70\" />\r\n            <Bars text=\"C++\" percent=\"60%\" value=\"60\" />\r\n          </Col>\r\n          <Col md={5}>\r\n            <Bars text=\"React\" percent=\"70%\" value=\"70\" />\r\n            <Bars text=\"Django\" percent=\"65%\" value=\"65\" />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md={4}>\r\n            <p className=\"text-center py-3\">\r\n              <Zoom bottom cascade>\r\n                <b>Developer &#8226; Freelancer</b>\r\n              </Zoom>\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <a\r\n          href=\"https://drive.google.com/file/d/1J8wSS9NfQVbzRA0IsXj4kAIyl2vXr856/view?usp=sharing\"\r\n          target=\"_blank\"\r\n        >\r\n          <Fade bottom>\r\n            <Buttons color=\"primary\" title=\"Download CV\" />\r\n          </Fade>\r\n        </a>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Collapse,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../components/CSS/Header.css\";\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Navbar light expand=\"md\" style={{ backgroundColor: \"#ecf0f3\" }}>\r\n      <Container>\r\n        <NavbarBrand style={{ textDecoration: \"none\" }}>\r\n          <Link\r\n            href=\"/\"\r\n            className=\"text-dark pl-4\"\r\n            style={{\r\n              fontSize: \"1.5em\",\r\n              fontWeight: \"550\",\r\n              fontFamily: \"monospace\",\r\n              letterSpacing: \"1px\",\r\n            }}\r\n          >\r\n            Shubh\r\n          </Link>\r\n        </NavbarBrand>\r\n        <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\r\n        <label className=\"menu-icon\" htmlFor=\"menu-btn\" onClick={toggle}>\r\n          <span className=\"navicon\"></span>\r\n        </label>\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"#home\" className=\"text-dark pl-4\">\r\n                Home\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"#about\" className=\"text-dark pl-4\">\r\n                About\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"#education\" className=\"text-dark pl-4\">\r\n                Education\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"#projects\" className=\"text-dark pl-4\">\r\n                Projects\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Footer from \"./layouts/Footer\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport About from \"./components/About\";\nimport Header from \"./layouts/Header\";\n\nclass App extends Component {\n  state = {\n    loading: true,\n  };\n\n  componentDidMount() {\n    this.fakeRequest().then(() => {\n      const el = document.querySelector(\".lds-ripple\");\n      if (el) {\n        el.remove(); // removing the spinner element\n        this.setState({ loading: false }); // showing the app\n      }\n    });\n  }\n\n  fakeRequest = () => {\n    return new Promise((resolve) => setTimeout(() => resolve(), 1500));\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null; //app is not ready (fake request is in process)\n    }\n\n    return (\n      <Router>\n        <Header />\n        <Home />\n        <About />\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}